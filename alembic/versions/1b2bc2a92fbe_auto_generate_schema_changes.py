"""Auto-generate schema changes

Revision ID: 1b2bc2a92fbe
Revises: 
Create Date: 2025-10-24 00:36:04.979094

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1b2bc2a92fbe'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('symbol', sa.String(length=250), nullable=False),
    sa.Column('company_name', sa.String(length=250), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('market_cap', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=50), nullable=False),
    sa.Column('exchange_full_name', sa.String(length=250), nullable=False),
    sa.Column('exchange', sa.String(length=250), nullable=False),
    sa.Column('industry', sa.String(length=250), nullable=True),
    sa.Column('website', sa.String(length=250), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('sector', sa.String(length=250), nullable=True),
    sa.Column('country', sa.String(length=250), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('address', sa.String(length=250), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('zip', sa.String(length=20), nullable=True),
    sa.Column('image', sa.String(length=250), nullable=True),
    sa.Column('ipo_date', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_companies_symbol'), 'companies', ['symbol'], unique=False)
    op.create_table('company_balance_sheets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('date', sa.String(length=20), nullable=False),
    sa.Column('reported_currency', sa.String(length=10), nullable=False),
    sa.Column('cik', sa.String(length=20), nullable=False),
    sa.Column('filing_date', sa.String(length=20), nullable=False),
    sa.Column('accepted_date', sa.String(length=30), nullable=False),
    sa.Column('fiscal_year', sa.String(length=10), nullable=False),
    sa.Column('period', sa.String(length=5), nullable=False),
    sa.Column('cash_and_cash_equivalents', sa.BigInteger(), nullable=False),
    sa.Column('short_term_investments', sa.BigInteger(), nullable=False),
    sa.Column('cash_and_short_term_investments', sa.BigInteger(), nullable=False),
    sa.Column('net_receivables', sa.BigInteger(), nullable=False),
    sa.Column('accounts_receivables', sa.BigInteger(), nullable=False),
    sa.Column('other_receivables', sa.BigInteger(), nullable=False),
    sa.Column('inventory', sa.BigInteger(), nullable=False),
    sa.Column('prepaids', sa.BigInteger(), nullable=False),
    sa.Column('other_current_assets', sa.BigInteger(), nullable=False),
    sa.Column('total_current_assets', sa.BigInteger(), nullable=False),
    sa.Column('property_plant_equipment_net', sa.BigInteger(), nullable=False),
    sa.Column('goodwill', sa.BigInteger(), nullable=False),
    sa.Column('intangible_assets', sa.BigInteger(), nullable=False),
    sa.Column('goodwill_and_intangible_assets', sa.BigInteger(), nullable=False),
    sa.Column('long_term_investments', sa.BigInteger(), nullable=False),
    sa.Column('tax_assets', sa.BigInteger(), nullable=False),
    sa.Column('other_non_current_assets', sa.BigInteger(), nullable=False),
    sa.Column('total_non_current_assets', sa.BigInteger(), nullable=False),
    sa.Column('other_assets', sa.BigInteger(), nullable=False),
    sa.Column('total_assets', sa.BigInteger(), nullable=False),
    sa.Column('total_payables', sa.BigInteger(), nullable=False),
    sa.Column('account_payables', sa.BigInteger(), nullable=False),
    sa.Column('other_payables', sa.BigInteger(), nullable=False),
    sa.Column('accrued_expenses', sa.BigInteger(), nullable=False),
    sa.Column('short_term_debt', sa.BigInteger(), nullable=False),
    sa.Column('capital_lease_obligations_current', sa.BigInteger(), nullable=False),
    sa.Column('tax_payables', sa.BigInteger(), nullable=False),
    sa.Column('deferred_revenue', sa.BigInteger(), nullable=False),
    sa.Column('other_current_liabilities', sa.BigInteger(), nullable=False),
    sa.Column('total_current_liabilities', sa.BigInteger(), nullable=False),
    sa.Column('long_term_debt', sa.BigInteger(), nullable=False),
    sa.Column('deferred_revenue_non_current', sa.BigInteger(), nullable=False),
    sa.Column('deferred_tax_liabilities_non_current', sa.BigInteger(), nullable=False),
    sa.Column('other_non_current_liabilities', sa.BigInteger(), nullable=False),
    sa.Column('total_non_current_liabilities', sa.BigInteger(), nullable=False),
    sa.Column('other_liabilities', sa.BigInteger(), nullable=False),
    sa.Column('capital_lease_obligations', sa.BigInteger(), nullable=False),
    sa.Column('total_liabilities', sa.BigInteger(), nullable=False),
    sa.Column('treasury_stock', sa.BigInteger(), nullable=False),
    sa.Column('preferred_stock', sa.BigInteger(), nullable=False),
    sa.Column('common_stock', sa.BigInteger(), nullable=False),
    sa.Column('retained_earnings', sa.BigInteger(), nullable=False),
    sa.Column('additional_paid_in_capital', sa.BigInteger(), nullable=False),
    sa.Column('accumulated_other_comprehensive_income_loss', sa.BigInteger(), nullable=False),
    sa.Column('other_total_stockholders_equity', sa.BigInteger(), nullable=False),
    sa.Column('total_stockholders_equity', sa.BigInteger(), nullable=False),
    sa.Column('total_equity', sa.BigInteger(), nullable=False),
    sa.Column('minority_interest', sa.BigInteger(), nullable=False),
    sa.Column('total_liabilities_and_total_equity', sa.BigInteger(), nullable=False),
    sa.Column('total_investments', sa.BigInteger(), nullable=False),
    sa.Column('total_debt', sa.BigInteger(), nullable=False),
    sa.Column('net_debt', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_balance_sheets_company_id'), 'company_balance_sheets', ['company_id'], unique=False)
    op.create_index(op.f('ix_company_balance_sheets_symbol'), 'company_balance_sheets', ['symbol'], unique=False)
    op.create_table('company_cash_flow_statements',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('date', sa.String(length=20), nullable=False),
    sa.Column('reported_currency', sa.String(length=10), nullable=False),
    sa.Column('cik', sa.String(length=20), nullable=False),
    sa.Column('filing_date', sa.String(length=20), nullable=False),
    sa.Column('accepted_date', sa.String(length=20), nullable=False),
    sa.Column('fiscal_year', sa.String(length=10), nullable=False),
    sa.Column('period', sa.String(length=10), nullable=False),
    sa.Column('net_income', sa.BigInteger(), nullable=False),
    sa.Column('depreciation_and_amortization', sa.BigInteger(), nullable=False),
    sa.Column('deferred_income_tax', sa.BigInteger(), nullable=False),
    sa.Column('stock_based_compensation', sa.BigInteger(), nullable=False),
    sa.Column('change_in_working_capital', sa.BigInteger(), nullable=False),
    sa.Column('accounts_receivables', sa.BigInteger(), nullable=False),
    sa.Column('inventory', sa.BigInteger(), nullable=False),
    sa.Column('accounts_payables', sa.BigInteger(), nullable=False),
    sa.Column('other_working_capital', sa.BigInteger(), nullable=False),
    sa.Column('other_non_cash_items', sa.BigInteger(), nullable=False),
    sa.Column('net_cash_provided_by_operating_activities', sa.BigInteger(), nullable=False),
    sa.Column('investments_in_property_plant_and_equipment', sa.BigInteger(), nullable=False),
    sa.Column('acquisitions_net', sa.BigInteger(), nullable=False),
    sa.Column('purchases_of_investments', sa.BigInteger(), nullable=False),
    sa.Column('sales_maturities_of_investments', sa.BigInteger(), nullable=False),
    sa.Column('other_investing_activities', sa.BigInteger(), nullable=False),
    sa.Column('net_cash_provided_by_investing_activities', sa.BigInteger(), nullable=False),
    sa.Column('net_debt_issuance', sa.BigInteger(), nullable=False),
    sa.Column('long_term_net_debt_issuance', sa.BigInteger(), nullable=False),
    sa.Column('short_term_net_debt_issuance', sa.BigInteger(), nullable=False),
    sa.Column('net_stock_issuance', sa.BigInteger(), nullable=False),
    sa.Column('net_common_stock_issuance', sa.BigInteger(), nullable=False),
    sa.Column('common_stock_issuance', sa.BigInteger(), nullable=False),
    sa.Column('common_stock_repurchased', sa.BigInteger(), nullable=False),
    sa.Column('net_preferred_stock_issuance', sa.BigInteger(), nullable=False),
    sa.Column('net_dividends_paid', sa.BigInteger(), nullable=False),
    sa.Column('common_dividends_paid', sa.BigInteger(), nullable=False),
    sa.Column('preferred_dividends_paid', sa.BigInteger(), nullable=False),
    sa.Column('other_financing_activities', sa.BigInteger(), nullable=False),
    sa.Column('net_cash_provided_by_financing_activities', sa.BigInteger(), nullable=False),
    sa.Column('effect_of_forex_changes_on_cash', sa.BigInteger(), nullable=False),
    sa.Column('net_change_in_cash', sa.BigInteger(), nullable=False),
    sa.Column('cash_at_end_of_period', sa.BigInteger(), nullable=False),
    sa.Column('cash_at_beginning_of_period', sa.BigInteger(), nullable=False),
    sa.Column('operating_cash_flow', sa.BigInteger(), nullable=False),
    sa.Column('capital_expenditure', sa.BigInteger(), nullable=False),
    sa.Column('free_cash_flow', sa.BigInteger(), nullable=False),
    sa.Column('income_taxes_paid', sa.BigInteger(), nullable=False),
    sa.Column('interest_paid', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_cash_flow_statements_company_id'), 'company_cash_flow_statements', ['company_id'], unique=False)
    op.create_index(op.f('ix_company_cash_flow_statements_symbol'), 'company_cash_flow_statements', ['symbol'], unique=False)
    op.create_table('company_dcf',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('date', sa.String(length=20), nullable=True),
    sa.Column('dcf', sa.Float(), nullable=True),
    sa.Column('stock_price', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_dcf_company_id'), 'company_dcf', ['company_id'], unique=False)
    op.create_index(op.f('ix_company_dcf_id'), 'company_dcf', ['id'], unique=False)
    op.create_index(op.f('ix_company_dcf_symbol'), 'company_dcf', ['symbol'], unique=False)
    op.create_table('company_dividends',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('date', sa.String(length=20), nullable=False),
    sa.Column('record_date', sa.String(length=20), nullable=True),
    sa.Column('payment_date', sa.String(length=20), nullable=True),
    sa.Column('declaration_date', sa.String(length=20), nullable=True),
    sa.Column('dividend', sa.Float(), nullable=True),
    sa.Column('adj_dividend', sa.Float(), nullable=True),
    sa.Column('dividend_yield', sa.Float(), nullable=True),
    sa.Column('frequency', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_dividends_company_id'), 'company_dividends', ['company_id'], unique=False)
    op.create_index(op.f('ix_company_dividends_id'), 'company_dividends', ['id'], unique=False)
    op.create_index(op.f('ix_company_dividends_symbol'), 'company_dividends', ['symbol'], unique=False)
    op.create_table('company_financial_ratios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('date', sa.String(length=20), nullable=True),
    sa.Column('fiscal_year', sa.String(length=10), nullable=True),
    sa.Column('period', sa.String(length=10), nullable=True),
    sa.Column('reported_currency', sa.String(length=10), nullable=True),
    sa.Column('gross_profit_margin', sa.Float(), nullable=True),
    sa.Column('ebit_margin', sa.Float(), nullable=True),
    sa.Column('ebitda_margin', sa.Float(), nullable=True),
    sa.Column('operating_profit_margin', sa.Float(), nullable=True),
    sa.Column('pretax_profit_margin', sa.Float(), nullable=True),
    sa.Column('continuous_operations_profit_margin', sa.Float(), nullable=True),
    sa.Column('net_profit_margin', sa.Float(), nullable=True),
    sa.Column('bottom_line_profit_margin', sa.Float(), nullable=True),
    sa.Column('receivables_turnover', sa.Float(), nullable=True),
    sa.Column('payables_turnover', sa.Float(), nullable=True),
    sa.Column('inventory_turnover', sa.Float(), nullable=True),
    sa.Column('fixed_asset_turnover', sa.Float(), nullable=True),
    sa.Column('asset_turnover', sa.Float(), nullable=True),
    sa.Column('current_ratio', sa.Float(), nullable=True),
    sa.Column('quick_ratio', sa.Float(), nullable=True),
    sa.Column('solvency_ratio', sa.Float(), nullable=True),
    sa.Column('cash_ratio', sa.Float(), nullable=True),
    sa.Column('price_to_earnings_ratio', sa.Float(), nullable=True),
    sa.Column('price_to_earnings_growth_ratio', sa.Float(), nullable=True),
    sa.Column('forward_price_to_earnings_growth_ratio', sa.Float(), nullable=True),
    sa.Column('price_to_book_ratio', sa.Float(), nullable=True),
    sa.Column('price_to_sales_ratio', sa.Float(), nullable=True),
    sa.Column('price_to_free_cash_flow_ratio', sa.Float(), nullable=True),
    sa.Column('price_to_operating_cash_flow_ratio', sa.Float(), nullable=True),
    sa.Column('debt_to_assets_ratio', sa.Float(), nullable=True),
    sa.Column('debt_to_equity_ratio', sa.Float(), nullable=True),
    sa.Column('debt_to_capital_ratio', sa.Float(), nullable=True),
    sa.Column('long_term_debt_to_capital_ratio', sa.Float(), nullable=True),
    sa.Column('financial_leverage_ratio', sa.Float(), nullable=True),
    sa.Column('working_capital_turnover_ratio', sa.Float(), nullable=True),
    sa.Column('operating_cash_flow_ratio', sa.Float(), nullable=True),
    sa.Column('operating_cash_flow_sales_ratio', sa.Float(), nullable=True),
    sa.Column('free_cash_flow_operating_cash_flow_ratio', sa.Float(), nullable=True),
    sa.Column('debt_service_coverage_ratio', sa.Float(), nullable=True),
    sa.Column('interest_coverage_ratio', sa.Float(), nullable=True),
    sa.Column('short_term_operating_cash_flow_coverage_ratio', sa.Float(), nullable=True),
    sa.Column('operating_cash_flow_coverage_ratio', sa.Float(), nullable=True),
    sa.Column('capital_expenditure_coverage_ratio', sa.Float(), nullable=True),
    sa.Column('dividend_paid_and_capex_coverage_ratio', sa.Float(), nullable=True),
    sa.Column('dividend_payout_ratio', sa.Float(), nullable=True),
    sa.Column('dividend_yield', sa.Float(), nullable=True),
    sa.Column('dividend_yield_percentage', sa.Float(), nullable=True),
    sa.Column('revenue_per_share', sa.Float(), nullable=True),
    sa.Column('net_income_per_share', sa.Float(), nullable=True),
    sa.Column('interest_debt_per_share', sa.Float(), nullable=True),
    sa.Column('cash_per_share', sa.Float(), nullable=True),
    sa.Column('book_value_per_share', sa.Float(), nullable=True),
    sa.Column('tangible_book_value_per_share', sa.Float(), nullable=True),
    sa.Column('shareholders_equity_per_share', sa.Float(), nullable=True),
    sa.Column('operating_cash_flow_per_share', sa.Float(), nullable=True),
    sa.Column('capex_per_share', sa.Float(), nullable=True),
    sa.Column('free_cash_flow_per_share', sa.Float(), nullable=True),
    sa.Column('net_income_per_ebt', sa.Float(), nullable=True),
    sa.Column('ebt_per_ebit', sa.Float(), nullable=True),
    sa.Column('price_to_fair_value', sa.Float(), nullable=True),
    sa.Column('debt_to_market_cap', sa.Float(), nullable=True),
    sa.Column('effective_tax_rate', sa.Float(), nullable=True),
    sa.Column('enterprise_value_multiple', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_financial_ratios_company_id'), 'company_financial_ratios', ['company_id'], unique=False)
    op.create_index(op.f('ix_company_financial_ratios_id'), 'company_financial_ratios', ['id'], unique=False)
    op.create_index(op.f('ix_company_financial_ratios_symbol'), 'company_financial_ratios', ['symbol'], unique=False)
    op.create_table('company_financial_scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('reported_currency', sa.String(length=10), nullable=True),
    sa.Column('altman_z_score', sa.Float(), nullable=True),
    sa.Column('piotroski_score', sa.Integer(), nullable=True),
    sa.Column('working_capital', sa.Float(), nullable=True),
    sa.Column('total_assets', sa.Float(), nullable=True),
    sa.Column('retained_earnings', sa.Float(), nullable=True),
    sa.Column('ebit', sa.Float(), nullable=True),
    sa.Column('market_cap', sa.Float(), nullable=True),
    sa.Column('total_liabilities', sa.Float(), nullable=True),
    sa.Column('revenue', sa.Float(), nullable=True),
    sa.Column('ccreated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_financial_scores_company_id'), 'company_financial_scores', ['company_id'], unique=False)
    op.create_index(op.f('ix_company_financial_scores_id'), 'company_financial_scores', ['id'], unique=False)
    op.create_index(op.f('ix_company_financial_scores_symbol'), 'company_financial_scores', ['symbol'], unique=False)
    op.create_table('company_general_news',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('symbol', sa.String(length=12), nullable=True),
    sa.Column('published_date', sa.DateTime(), nullable=False),
    sa.Column('publisher', sa.String(length=255), nullable=False),
    sa.Column('news_title', sa.String(length=500), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('image', sa.String(length=1000), nullable=True),
    sa.Column('site', sa.String(length=255), nullable=True),
    sa.Column('news_url', sa.String(length=1000), nullable=False),
    sa.Column('sentiment', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_general_news_company_id'), 'company_general_news', ['company_id'], unique=False)
    op.create_index(op.f('ix_company_general_news_id'), 'company_general_news', ['id'], unique=False)
    op.create_index(op.f('ix_company_general_news_symbol'), 'company_general_news', ['symbol'], unique=False)
    op.create_table('company_grading_news',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('published_date', sa.DateTime(), nullable=False),
    sa.Column('news_url', sa.String(length=1000), nullable=False),
    sa.Column('news_title', sa.String(length=500), nullable=False),
    sa.Column('news_base_url', sa.String(length=500), nullable=True),
    sa.Column('news_publisher', sa.String(length=255), nullable=True),
    sa.Column('new_grade', sa.String(length=10), nullable=False),
    sa.Column('previous_grade', sa.String(length=10), nullable=True),
    sa.Column('grading_company', sa.String(length=255), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=True),
    sa.Column('sentiment', sa.String(length=50), nullable=True),
    sa.Column('price_when_posted', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_grading_news_company_id'), 'company_grading_news', ['company_id'], unique=False)
    op.create_index(op.f('ix_company_grading_news_id'), 'company_grading_news', ['id'], unique=False)
    op.create_index(op.f('ix_company_grading_news_symbol'), 'company_grading_news', ['symbol'], unique=False)
    op.create_table('company_grading_summaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('strong_buy', sa.Integer(), nullable=False),
    sa.Column('buy', sa.Integer(), nullable=False),
    sa.Column('hold', sa.Integer(), nullable=False),
    sa.Column('sell', sa.Integer(), nullable=False),
    sa.Column('strong_sell', sa.Integer(), nullable=False),
    sa.Column('consensus', sa.String(length=50), nullable=False),
    sa.Column('ccreated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_grading_summaries_id'), 'company_grading_summaries', ['id'], unique=False)
    op.create_index(op.f('ix_company_grading_summaries_symbol'), 'company_grading_summaries', ['symbol'], unique=False)
    op.create_table('company_gradings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('date', sa.String(length=20), nullable=False),
    sa.Column('grading_company', sa.String(length=255), nullable=True),
    sa.Column('previous_grade', sa.String(length=10), nullable=True),
    sa.Column('new_grade', sa.String(length=10), nullable=True),
    sa.Column('action', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_gradings_company_id'), 'company_gradings', ['company_id'], unique=False)
    op.create_index(op.f('ix_company_gradings_id'), 'company_gradings', ['id'], unique=False)
    op.create_index(op.f('ix_company_gradings_symbol'), 'company_gradings', ['symbol'], unique=False)
    op.create_table('company_income_statements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('date', sa.String(length=20), nullable=False),
    sa.Column('reported_currency', sa.String(length=10), nullable=False),
    sa.Column('cik', sa.String(length=20), nullable=False),
    sa.Column('filing_date', sa.String(length=20), nullable=False),
    sa.Column('accepted_date', sa.String(length=30), nullable=False),
    sa.Column('fiscal_year', sa.String(length=10), nullable=False),
    sa.Column('period', sa.String(length=5), nullable=False),
    sa.Column('revenue', sa.BigInteger(), nullable=False),
    sa.Column('cost_of_revenue', sa.BigInteger(), nullable=False),
    sa.Column('gross_profit', sa.BigInteger(), nullable=False),
    sa.Column('research_and_development_expenses', sa.BigInteger(), nullable=False),
    sa.Column('general_and_administrative_expenses', sa.BigInteger(), nullable=False),
    sa.Column('selling_and_marketing_expenses', sa.BigInteger(), nullable=False),
    sa.Column('selling_general_and_administrative_expenses', sa.BigInteger(), nullable=False),
    sa.Column('other_expenses', sa.BigInteger(), nullable=False),
    sa.Column('operating_expenses', sa.BigInteger(), nullable=False),
    sa.Column('cost_and_expenses', sa.BigInteger(), nullable=False),
    sa.Column('net_interest_income', sa.BigInteger(), nullable=False),
    sa.Column('interest_income', sa.BigInteger(), nullable=False),
    sa.Column('interest_expense', sa.BigInteger(), nullable=False),
    sa.Column('depreciation_and_amortization', sa.BigInteger(), nullable=False),
    sa.Column('ebitda', sa.BigInteger(), nullable=False),
    sa.Column('ebit', sa.BigInteger(), nullable=False),
    sa.Column('non_operating_income_excluding_interest', sa.BigInteger(), nullable=False),
    sa.Column('operating_income', sa.BigInteger(), nullable=False),
    sa.Column('total_other_income_expenses_net', sa.BigInteger(), nullable=False),
    sa.Column('income_before_tax', sa.BigInteger(), nullable=False),
    sa.Column('income_tax_expense', sa.BigInteger(), nullable=False),
    sa.Column('net_income_from_continuing_operations', sa.BigInteger(), nullable=False),
    sa.Column('net_income_from_discontinued_operations', sa.BigInteger(), nullable=False),
    sa.Column('other_adjustments_to_net_income', sa.BigInteger(), nullable=False),
    sa.Column('net_income', sa.BigInteger(), nullable=False),
    sa.Column('net_income_deductions', sa.BigInteger(), nullable=False),
    sa.Column('bottom_line_net_income', sa.BigInteger(), nullable=False),
    sa.Column('eps', sa.Float(), nullable=False),
    sa.Column('eps_diluted', sa.Float(), nullable=False),
    sa.Column('weighted_average_shs_out', sa.BigInteger(), nullable=False),
    sa.Column('weighted_average_shs_out_dil', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_income_statements_company_id'), 'company_income_statements', ['company_id'], unique=False)
    op.create_index(op.f('ix_company_income_statements_id'), 'company_income_statements', ['id'], unique=False)
    op.create_index(op.f('ix_company_income_statements_symbol'), 'company_income_statements', ['symbol'], unique=False)
    op.create_table('company_key_metrics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('date', sa.String(length=20), nullable=False),
    sa.Column('fiscal_year', sa.String(length=10), nullable=False),
    sa.Column('period', sa.String(length=10), nullable=False),
    sa.Column('reported_currency', sa.String(length=10), nullable=False),
    sa.Column('market_cap', sa.Integer(), nullable=True),
    sa.Column('enterprise_value', sa.Integer(), nullable=True),
    sa.Column('ev_to_sales', sa.Float(), nullable=True),
    sa.Column('ev_to_operating_cash_flow', sa.Float(), nullable=True),
    sa.Column('ev_to_free_cash_flow', sa.Float(), nullable=True),
    sa.Column('ev_to_ebitda', sa.Float(), nullable=True),
    sa.Column('net_debt_to_ebitda', sa.Float(), nullable=True),
    sa.Column('current_ratio', sa.Float(), nullable=True),
    sa.Column('income_quality', sa.Float(), nullable=True),
    sa.Column('graham_number', sa.Float(), nullable=True),
    sa.Column('graham_net_net', sa.Float(), nullable=True),
    sa.Column('tax_burden', sa.Float(), nullable=True),
    sa.Column('interest_burden', sa.Float(), nullable=True),
    sa.Column('working_capital', sa.Integer(), nullable=True),
    sa.Column('invested_capital', sa.Integer(), nullable=True),
    sa.Column('return_on_assets', sa.Float(), nullable=True),
    sa.Column('operating_return_on_assets', sa.Float(), nullable=True),
    sa.Column('return_on_tangible_assets', sa.Float(), nullable=True),
    sa.Column('return_on_equity', sa.Float(), nullable=True),
    sa.Column('return_on_invested_capital', sa.Float(), nullable=True),
    sa.Column('return_on_capital_employed', sa.Float(), nullable=True),
    sa.Column('earnings_yield', sa.Float(), nullable=True),
    sa.Column('free_cash_flow_yield', sa.Float(), nullable=True),
    sa.Column('capex_to_operating_cash_flow', sa.Float(), nullable=True),
    sa.Column('capex_to_depreciation', sa.Float(), nullable=True),
    sa.Column('capex_to_revenue', sa.Float(), nullable=True),
    sa.Column('sales_general_and_administrative_to_revenue', sa.Float(), nullable=True),
    sa.Column('research_and_development_to_revenue', sa.Float(), nullable=True),
    sa.Column('stock_based_compensation_to_revenue', sa.Float(), nullable=True),
    sa.Column('intangibles_to_total_assets', sa.Float(), nullable=True),
    sa.Column('average_receivables', sa.Integer(), nullable=True),
    sa.Column('average_payables', sa.Integer(), nullable=True),
    sa.Column('average_inventory', sa.Integer(), nullable=True),
    sa.Column('days_of_sales_outstanding', sa.Float(), nullable=True),
    sa.Column('days_of_payables_outstanding', sa.Float(), nullable=True),
    sa.Column('days_of_inventory_outstanding', sa.Float(), nullable=True),
    sa.Column('operating_cycle', sa.Float(), nullable=True),
    sa.Column('cash_conversion_cycle', sa.Float(), nullable=True),
    sa.Column('free_cash_flow_to_equity', sa.Float(), nullable=True),
    sa.Column('free_cash_flow_to_firm', sa.Float(), nullable=True),
    sa.Column('tangible_asset_value', sa.Integer(), nullable=True),
    sa.Column('net_current_asset_value', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_key_metrics_company_id'), 'company_key_metrics', ['company_id'], unique=False)
    op.create_index(op.f('ix_company_key_metrics_id'), 'company_key_metrics', ['id'], unique=False)
    op.create_index(op.f('ix_company_key_metrics_symbol'), 'company_key_metrics', ['symbol'], unique=False)
    op.create_table('company_price_target_news',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('published_date', sa.DateTime(), nullable=False),
    sa.Column('news_url', sa.String(length=1000), nullable=False),
    sa.Column('news_title', sa.String(length=500), nullable=False),
    sa.Column('analyst_name', sa.String(length=255), nullable=False),
    sa.Column('price_target', sa.Float(), nullable=False),
    sa.Column('adj_price_target', sa.Float(), nullable=True),
    sa.Column('price_when_posted', sa.Float(), nullable=False),
    sa.Column('news_publisher', sa.String(length=255), nullable=True),
    sa.Column('news_base_url', sa.String(length=500), nullable=True),
    sa.Column('analyst_company', sa.String(length=255), nullable=True),
    sa.Column('sentiment', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_price_target_news_id'), 'company_price_target_news', ['id'], unique=False)
    op.create_index(op.f('ix_company_price_target_news_symbol'), 'company_price_target_news', ['symbol'], unique=False)
    op.create_table('company_price_target_summaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('last_month_count', sa.Integer(), nullable=False),
    sa.Column('last_month_average_price_target', sa.Float(), nullable=False),
    sa.Column('last_quarter_count', sa.Integer(), nullable=False),
    sa.Column('last_quarter_average_price_target', sa.Float(), nullable=False),
    sa.Column('last_year_count', sa.Integer(), nullable=False),
    sa.Column('last_year_average_price_target', sa.Float(), nullable=False),
    sa.Column('all_time_count', sa.Integer(), nullable=False),
    sa.Column('all_time_average_price_target', sa.Float(), nullable=False),
    sa.Column('publishers', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_price_target_summaries_id'), 'company_price_target_summaries', ['id'], unique=False)
    op.create_index(op.f('ix_company_price_target_summaries_symbol'), 'company_price_target_summaries', ['symbol'], unique=False)
    op.create_table('company_price_targets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('target_high', sa.Float(), nullable=True),
    sa.Column('target_low', sa.Float(), nullable=True),
    sa.Column('target_consensus', sa.Float(), nullable=True),
    sa.Column('target_median', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_price_targets_company_id'), 'company_price_targets', ['company_id'], unique=False)
    op.create_index(op.f('ix_company_price_targets_id'), 'company_price_targets', ['id'], unique=False)
    op.create_index(op.f('ix_company_price_targets_symbol'), 'company_price_targets', ['symbol'], unique=False)
    op.create_table('company_rating_summaries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('rating', sa.String(length=50), nullable=True),
    sa.Column('overall_score', sa.Integer(), nullable=True),
    sa.Column('discounted_cash_flow_score', sa.Integer(), nullable=True),
    sa.Column('return_on_equity_score', sa.Integer(), nullable=True),
    sa.Column('return_on_assets_score', sa.Integer(), nullable=True),
    sa.Column('debt_to_equity_score', sa.Integer(), nullable=True),
    sa.Column('price_to_earnings_score', sa.Integer(), nullable=True),
    sa.Column('price_to_book_score', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_rating_summaries_company_id'), 'company_rating_summaries', ['company_id'], unique=False)
    op.create_index(op.f('ix_company_rating_summaries_id'), 'company_rating_summaries', ['id'], unique=False)
    op.create_index(op.f('ix_company_rating_summaries_symbol'), 'company_rating_summaries', ['symbol'], unique=False)
    op.create_table('company_stock_peers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('company_name', sa.String(length=255), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('market_cap', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_stock_peers_company_id'), 'company_stock_peers', ['company_id'], unique=False)
    op.create_index(op.f('ix_company_stock_peers_symbol'), 'company_stock_peers', ['symbol'], unique=False)
    op.create_table('company_stock_splits',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('date', sa.String(length=20), nullable=False),
    sa.Column('numerator', sa.Integer(), nullable=False),
    sa.Column('denominator', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_company_stock_splits_company_id'), 'company_stock_splits', ['company_id'], unique=False)
    op.create_index(op.f('ix_company_stock_splits_symbol'), 'company_stock_splits', ['symbol'], unique=False)
    op.create_table('stock_price_changes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('one_day', sa.Float(), nullable=True),
    sa.Column('five_day', sa.Float(), nullable=True),
    sa.Column('one_month', sa.Float(), nullable=True),
    sa.Column('three_month', sa.Float(), nullable=True),
    sa.Column('six_month', sa.Float(), nullable=True),
    sa.Column('ytd', sa.Float(), nullable=True),
    sa.Column('one_year', sa.Float(), nullable=True),
    sa.Column('three_year', sa.Float(), nullable=True),
    sa.Column('five_year', sa.Float(), nullable=True),
    sa.Column('ten_year', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stock_price_changes_company_id'), 'stock_price_changes', ['company_id'], unique=False)
    op.create_index(op.f('ix_stock_price_changes_symbol'), 'stock_price_changes', ['symbol'], unique=False)
    op.create_table('stock_prices',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=12), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('open_price', sa.Float(), nullable=False),
    sa.Column('close_price', sa.Float(), nullable=False),
    sa.Column('high_price', sa.Float(), nullable=False),
    sa.Column('low_price', sa.Float(), nullable=False),
    sa.Column('volume', sa.Integer(), nullable=False),
    sa.Column('change', sa.Float(), nullable=True),
    sa.Column('change_percent', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stock_prices_company_id'), 'stock_prices', ['company_id'], unique=False)
    op.create_index(op.f('ix_stock_prices_symbol'), 'stock_prices', ['symbol'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_stock_prices_symbol'), table_name='stock_prices')
    op.drop_index(op.f('ix_stock_prices_company_id'), table_name='stock_prices')
    op.drop_table('stock_prices')
    op.drop_index(op.f('ix_stock_price_changes_symbol'), table_name='stock_price_changes')
    op.drop_index(op.f('ix_stock_price_changes_company_id'), table_name='stock_price_changes')
    op.drop_table('stock_price_changes')
    op.drop_index(op.f('ix_company_stock_splits_symbol'), table_name='company_stock_splits')
    op.drop_index(op.f('ix_company_stock_splits_company_id'), table_name='company_stock_splits')
    op.drop_table('company_stock_splits')
    op.drop_index(op.f('ix_company_stock_peers_symbol'), table_name='company_stock_peers')
    op.drop_index(op.f('ix_company_stock_peers_company_id'), table_name='company_stock_peers')
    op.drop_table('company_stock_peers')
    op.drop_index(op.f('ix_company_rating_summaries_symbol'), table_name='company_rating_summaries')
    op.drop_index(op.f('ix_company_rating_summaries_id'), table_name='company_rating_summaries')
    op.drop_index(op.f('ix_company_rating_summaries_company_id'), table_name='company_rating_summaries')
    op.drop_table('company_rating_summaries')
    op.drop_index(op.f('ix_company_price_targets_symbol'), table_name='company_price_targets')
    op.drop_index(op.f('ix_company_price_targets_id'), table_name='company_price_targets')
    op.drop_index(op.f('ix_company_price_targets_company_id'), table_name='company_price_targets')
    op.drop_table('company_price_targets')
    op.drop_index(op.f('ix_company_price_target_summaries_symbol'), table_name='company_price_target_summaries')
    op.drop_index(op.f('ix_company_price_target_summaries_id'), table_name='company_price_target_summaries')
    op.drop_table('company_price_target_summaries')
    op.drop_index(op.f('ix_company_price_target_news_symbol'), table_name='company_price_target_news')
    op.drop_index(op.f('ix_company_price_target_news_id'), table_name='company_price_target_news')
    op.drop_table('company_price_target_news')
    op.drop_index(op.f('ix_company_key_metrics_symbol'), table_name='company_key_metrics')
    op.drop_index(op.f('ix_company_key_metrics_id'), table_name='company_key_metrics')
    op.drop_index(op.f('ix_company_key_metrics_company_id'), table_name='company_key_metrics')
    op.drop_table('company_key_metrics')
    op.drop_index(op.f('ix_company_income_statements_symbol'), table_name='company_income_statements')
    op.drop_index(op.f('ix_company_income_statements_id'), table_name='company_income_statements')
    op.drop_index(op.f('ix_company_income_statements_company_id'), table_name='company_income_statements')
    op.drop_table('company_income_statements')
    op.drop_index(op.f('ix_company_gradings_symbol'), table_name='company_gradings')
    op.drop_index(op.f('ix_company_gradings_id'), table_name='company_gradings')
    op.drop_index(op.f('ix_company_gradings_company_id'), table_name='company_gradings')
    op.drop_table('company_gradings')
    op.drop_index(op.f('ix_company_grading_summaries_symbol'), table_name='company_grading_summaries')
    op.drop_index(op.f('ix_company_grading_summaries_id'), table_name='company_grading_summaries')
    op.drop_table('company_grading_summaries')
    op.drop_index(op.f('ix_company_grading_news_symbol'), table_name='company_grading_news')
    op.drop_index(op.f('ix_company_grading_news_id'), table_name='company_grading_news')
    op.drop_index(op.f('ix_company_grading_news_company_id'), table_name='company_grading_news')
    op.drop_table('company_grading_news')
    op.drop_index(op.f('ix_company_general_news_symbol'), table_name='company_general_news')
    op.drop_index(op.f('ix_company_general_news_id'), table_name='company_general_news')
    op.drop_index(op.f('ix_company_general_news_company_id'), table_name='company_general_news')
    op.drop_table('company_general_news')
    op.drop_index(op.f('ix_company_financial_scores_symbol'), table_name='company_financial_scores')
    op.drop_index(op.f('ix_company_financial_scores_id'), table_name='company_financial_scores')
    op.drop_index(op.f('ix_company_financial_scores_company_id'), table_name='company_financial_scores')
    op.drop_table('company_financial_scores')
    op.drop_index(op.f('ix_company_financial_ratios_symbol'), table_name='company_financial_ratios')
    op.drop_index(op.f('ix_company_financial_ratios_id'), table_name='company_financial_ratios')
    op.drop_index(op.f('ix_company_financial_ratios_company_id'), table_name='company_financial_ratios')
    op.drop_table('company_financial_ratios')
    op.drop_index(op.f('ix_company_dividends_symbol'), table_name='company_dividends')
    op.drop_index(op.f('ix_company_dividends_id'), table_name='company_dividends')
    op.drop_index(op.f('ix_company_dividends_company_id'), table_name='company_dividends')
    op.drop_table('company_dividends')
    op.drop_index(op.f('ix_company_dcf_symbol'), table_name='company_dcf')
    op.drop_index(op.f('ix_company_dcf_id'), table_name='company_dcf')
    op.drop_index(op.f('ix_company_dcf_company_id'), table_name='company_dcf')
    op.drop_table('company_dcf')
    op.drop_index(op.f('ix_company_cash_flow_statements_symbol'), table_name='company_cash_flow_statements')
    op.drop_index(op.f('ix_company_cash_flow_statements_company_id'), table_name='company_cash_flow_statements')
    op.drop_table('company_cash_flow_statements')
    op.drop_index(op.f('ix_company_balance_sheets_symbol'), table_name='company_balance_sheets')
    op.drop_index(op.f('ix_company_balance_sheets_company_id'), table_name='company_balance_sheets')
    op.drop_table('company_balance_sheets')
    op.drop_index(op.f('ix_companies_symbol'), table_name='companies')
    op.drop_table('companies')
    # ### end Alembic commands ###
